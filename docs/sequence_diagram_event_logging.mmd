sequenceDiagram
    participant User as 👤 User
    participant Frontend as 🖥️ Frontend
    participant AuthMiddleware as 🔐 Auth Middleware
    participant AuthController as 🔑 Auth Controller
    participant SiswaController as 👨‍🎓 Siswa Controller
    participant PrediksiController as 🎯 Prediksi Controller
    participant Database as 💾 Database

    %% Authentication Flow
    Note over User, Database: 🔐 Authentication Process
    User->>Frontend: 1. Login Request
    Frontend->>AuthMiddleware: 2. POST /api/auth/token
    AuthMiddleware->>AuthController: 3. Forward Request
    
    AuthController->>Database: 4. Validate Credentials
    Database-->>AuthController: 5. User Verified
    AuthController->>AuthController: 6. Generate JWT Token
    AuthController->>Database: 7. Store Session Info
    Database-->>AuthController: 8. Session Stored
    
    AuthController-->>Frontend: 9. JWT Token Response
    Frontend->>Frontend: 10. Store Token
    Frontend-->>User: 11. Login Success

    %% Data Management Operations
    Note over User, Database: 📊 CRUD Operations
    User->>Frontend: 12. Data Management Request
    Frontend->>AuthMiddleware: 13. POST /api/siswa
    AuthMiddleware->>AuthController: 14. Validate Token
    AuthController-->>AuthMiddleware: 15. Token Valid
    AuthMiddleware->>SiswaController: 16. Forward Request
    
    SiswaController->>Database: 17. Execute CRUD Operation
    Database-->>SiswaController: 18. Operation Result
    SiswaController-->>Frontend: 19. Success Response
    Frontend-->>User: 20. Data Updated

    %% Prediction Operations
    Note over User, Database: 🔮 Prediction Process
    User->>Frontend: 21. Prediction Request
    Frontend->>AuthMiddleware: 22. POST /api/prediksi/
    AuthMiddleware->>AuthController: 23. Validate Token
    AuthController-->>AuthMiddleware: 24. Token Valid
    AuthMiddleware->>PrediksiController: 25. Forward Request
    
    PrediksiController->>Database: 26. Load Student Data
    Database-->>PrediksiController: 27. Student Data
    PrediksiController->>PrediksiController: 28. Execute C4.5 Prediction
    PrediksiController->>Database: 29. Store Prediction Result
    Database-->>PrediksiController: 30. Result Stored
    
    PrediksiController-->>Frontend: 31. Prediction Response
    Frontend-->>User: 32. Display Prediction

    %% Batch Prediction Operations
    Note over User, Database: 📈 Batch Prediction Process
    User->>Frontend: 33. Batch Prediction Request
    Frontend->>AuthMiddleware: 34. POST /api/prediksi/batch
    AuthMiddleware->>AuthController: 35. Validate Token
    AuthController-->>AuthMiddleware: 36. Token Valid
    AuthMiddleware->>PrediksiController: 37. Forward Batch Request
    
    PrediksiController->>Database: 38. Load All Student Data
    Database-->>PrediksiController: 39. Batch Data
    
    loop For Each Student
        PrediksiController->>PrediksiController: 40. Execute Prediction
        PrediksiController->>Database: 41. Store Result
    end
    
    PrediksiController-->>Frontend: 42. Batch Results Response
    Frontend-->>User: 43. Display Batch Results

    %% Security Monitoring
    Note over User, Database: 🛡️ Security Events
    User->>Frontend: 44. Failed Login Attempt
    Frontend->>AuthMiddleware: 45. POST /api/auth/token (Failed)
    AuthMiddleware->>AuthController: 46. Validate Credentials
    AuthController->>Database: 47. Check User Credentials
    Database-->>AuthController: 48. Invalid Credentials
    
    alt Multiple Failed Attempts
        AuthController->>Database: 49. Log Security Event
        Database-->>AuthController: 50. Brute Force Detected
        AuthController-->>Frontend: 51. Access Blocked (429)
    else Single Failed Attempt
        AuthController-->>Frontend: 52. Authentication Failed (401)
    end
    
    Frontend-->>User: 53. Login Failed

    %% Model Training Operations
    Note over User, Database: 🧠 ML Training Process
    User->>Frontend: 54. Training Request
    Frontend->>AuthMiddleware: 55. POST /api/prediksi/train
    AuthMiddleware->>AuthController: 56. Validate Token
    AuthController-->>AuthMiddleware: 57. Token Valid
    AuthMiddleware->>PrediksiController: 58. Forward Training Request
    
    PrediksiController->>Database: 59. Load Training Data
    Database-->>PrediksiController: 60. Training Dataset
    PrediksiController->>PrediksiController: 61. Train C4.5 Model
    PrediksiController->>Database: 62. Store Model
    Database-->>PrediksiController: 63. Model Stored
    
    PrediksiController-->>Frontend: 64. Training Complete Response
    Frontend-->>User: 65. Training Success

    %% Export Operations
    Note over User, Database: 📤 Data Export Process
    User->>Frontend: 66. Export Request
    Frontend->>AuthMiddleware: 67. GET /api/siswa/export/excel
    AuthMiddleware->>AuthController: 68. Validate Token
    AuthController-->>AuthMiddleware: 69. Token Valid
    AuthMiddleware->>SiswaController: 70. Forward Export Request
    
    SiswaController->>Database: 71. Query Export Data
    Database-->>SiswaController: 72. Export Dataset
    SiswaController->>SiswaController: 73. Generate Excel File
    SiswaController-->>Frontend: 74. Excel File Response
    Frontend-->>User: 75. Download Excel

    %% Error Handling
    Note over User, Database: ❌ Error Scenarios
    rect rgb(255, 248, 248)
        Note over AuthController: Error Scenarios
        alt Invalid Endpoint
            Frontend->>AuthMiddleware: 76. POST /api/invalid-endpoint
            AuthMiddleware->>AuthMiddleware: 77. Route Not Found
            AuthMiddleware-->>Frontend: 78. Error Response (404)
            Frontend-->>User: 79. Page Not Found
        end
        
        alt Database Error
            SiswaController->>Database: 80. Query Data
            Database-->>SiswaController: 81. Connection Error
            SiswaController-->>Frontend: 82. Internal Server Error (500)
            Frontend-->>User: 83. System Error
        end
    end

    %% Statistics and Analytics
    Note over User, Database: 📊 Feature Statistics
    User->>Frontend: 84. Statistics Request
    Frontend->>AuthMiddleware: 85. GET /api/prediksi/feature-statistics
    AuthMiddleware->>AuthController: 86. Validate Token
    AuthController-->>AuthMiddleware: 87. Token Valid
    AuthMiddleware->>PrediksiController: 88. Forward Statistics Request
    
    PrediksiController->>Database: 89. Query Statistics Data
    Database-->>PrediksiController: 90. Statistics Dataset
    PrediksiController->>PrediksiController: 91. Calculate Statistics
    PrediksiController-->>Frontend: 92. Statistics Response
    Frontend-->>User: 93. Display Charts & Analytics

    %% Performance Metrics Summary
    Note over User, Database: 📊 System Performance & Architecture
    Note right of AuthController: • Authentication: Bearer token validation<br/>• Session management: JWT based<br/>• Security: Brute force detection<br/>• Response time: <1 second<br/>• Token expiry: Configurable
    Note right of PrediksiController: • C4.5 prediction: <200ms<br/>• Batch processing: <10 seconds<br/>• Model training: <30 seconds<br/>• Feature statistics: <2 seconds<br/>• Export operations: <5 seconds
    Note right of Database: • FastAPI routing: Direct controller access<br/>• CORS middleware: Enabled<br/>• Authentication middleware: Built-in<br/>• Database: PostgreSQL with SQLAlchemy<br/>• API documentation: Swagger UI available 